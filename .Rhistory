install.packages('BAPredict')
install.packages("pacman")
install.packages("pacman")
install.packages("rgdal")
install.packages("rasterVis")
post=c(1:5)
Err=rand(5)
Err=randn(5)
Err=rnorm(5)
Err
mean(Err)
summary(Err)
var(Err)
Err=(Err-mean(Err))/var(Err)
Err
mean(Err)
var(Err)
Err=(Err-mean(Err))/sqrt(var(Err))
var(Err)
mean(Err)
Err
summar(Err)
summary(Err)
clean_likes=sqrt(2)*post+75
plot(post,clean_likes)
dirty_likes=(mean(clean_likes)+Err)
lines(post,dirty_likes)
Err=runif(5)
Err=(Err-0.5)/10
Err
dirty_likes=(clean_likes*(1+Err))
lines(post,dirty_likes)
plot(post,clean_likes)
plot(post,clean_likes)
lines(post,dirty_likes)
fit=lm(post,dirty_likes)
fit=lm(dirty_likes~post)
fit
summary(fit)
fit$residuals
names(fit)
fit$residuals%*%t(fit$residuals)
t(fit$residuals)%*%(fit$residuals)
SSE=t(fit$residuals)%*%(fit$residuals)
TSS=sum((dirty_likes-mean(dirty_likes))^2
TSS=sum((dirty_likes-mean(dirty_likes))^2)
Rsq=1-SSE/TSS
Tsq
Rsq
plot(fit)
Err=(runif(5)-0.5)/100
dirty_likes=(clean_likes*(1+Err))
plot(post,clean_likes)
lines(post,dirty_likes)
fit=lm(dirty_likes~post)
summary(fit)
lines(post,fit$fitted.values,col='red')
dirty_likes=round(clean_likes*(1+Err))
plot(post,clean_likes)
lines(post,dirty_likes)
fit=lm(dirty_likes~post)
summary(fit)
lines(post,fit$fitted.values,col='red')
mean(dirty_likes)
summary(dirty_likes)
plot(post,dirty_likes)
lines(c(post[1],post[5]),c(dirty_likes[1],dirty_likes[5]))
lines(post,fit$fitted.values,col='red')
nrand
ndist
rnorm()
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
ftoc = function(fin){}
ftoc = function(fin){
cout=fin-32/1.8;
}
ftoc(78)
c=ftoc(78)
c
ftoc = function(fin){
cout=(fin-32)/1.8;
}
c=ftoc(78)
c
ctof = function(cin){
fout=(cin*1.8+32);
}
f=ctof(c)
f
c
f=ctof(25.5)
f
cdata=rnorm(10,mean=25.5,sd=5)
cdata
hist(cdata)
ctof(cdata)
fdata=ctof(cdata)
fdata
hist(fdata)
fdata=round(fdata,digits=1)
fdata
fdata-ctof(cdata)
fdata-ctof(round(cdata,digits=2))
summary(fdata-ctof(round(cdata,digits=2)))
err=fdata-ctof(round(cdata,digits=2))
err
summary(err)
sqrt(var(err))
cdata=round(cdata,digits=2)
cdata
fdata
fit(cdata~fdata)
fit=lm(cdata~fdata)
fit
ctof
ftoc
1/1.8
-32/1.8
subdata=data.frame(cdata,fdata)
write.table(subdata,'~/Desktop/Bdata.csv',row.names=F,col.names=F,sep=',')
cdata=round(cdata,digits=1)
subdata=data.frame(cdata,fdata)
write.table(subdata,'~/Desktop/Bdata.csv',row.names=F,col.names=F,sep=',')
summary(cdata)
year=c(1865:1874)
murders=c(400,512,548,645,715,810,824,711,862,970)
mydata=data.frame(year,murders)
fit=lm(murders~year,data=mydata)
fit
fit$coefficients
sum(fit$residuals*fit$residuals)
summary(fit)
err=fit$residuals
mean(year)
mean(murders)
b=covar(year,murders)
b=cov(year,murders)
b
b=cov(year,murders)/var(year)
b
a=mean(murders)-b*mean(years)
a=mean(murders)-b*mean(year)
a
model=a+years*b
model=a+year*b
model
myerr=model-murders
sum(myerr*myerr)
sum(fit$residuals*fit$residuals)
stdata=c(72,80,96,105,118)
stdata=data.frame(c(1:5),stdata)
colnames(stdata)=c('post','likes')
fit=lm(likes~post,data=stdata)
fit
sum(fit$residuals*fit$residuals)
setwd("~/Dropbox/Alice_Project/pycode")
mydata=read.csv('results.csv',header=FALSE)
mydata
colnames(mydata)=c('degs','volts','fogs')
head(mydata)
degs=unique(mydata$degs)
degs
spread=rep(0,length(degs))
for(i=1:length(spread)){}
for(i in c(1:length(spread)){
ix=which(mydata$degs==degs[i])
}
for(i in c(1:length(spread)){
ix=which(mydata$degs==degs[i]);
spread[i]=max(mydata$degs[ix])-min(mydata$degs[ix]);
}
for(i in c(1:length(spread))){
ix=which(mydata$degs==degs[i]);
spread[i]=max(mydata$degs[ix])-min(mydata$degs[ix]);
}
spread
ix
mydata$degs[ix]
for(i in c(1:length(spread))){
ix=which(mydata$degs==degs[i]);
spread[i]=max(mydata$fogs[ix])-min(mydata$fogs[ix]);
}
spread
plot(degs,spread)
tmpdata=data.frame(c(1:length(ix)),mydata$fogs[ix])
tmpdata
t=pi/180*degs;
xc=cos(t);
xs=sin(t);
fit=lm(spread~xc+xs);
plot(degs,spread);
lines(t,fit)
t=pi/180*degs;
xc=cos(t);
xs=sin(t);
fit=lm(spread~xc+xs);
pred=predict(fit,data=degs)
plot(degs,spread);
lines(t,fit)
pred
t
t=pi/180*degs;
xc=cos(t);
xs=sin(t);
fit=lm(spread~xc+xs);
pred=predict(fit,data=degs)
plot(degs,spread);
lines(degs,pred)
fit
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
View(mydata)
View(mydata)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
dt
dfog
dfdt
plot(thyme[-1],dfdt)
summary(dfdt)
boxplot(dfdt)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
degs
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
spread
ix=which(mydata$degs==45)
thyme=mydata$time[ix];
thyme=thyme-min(thyme);
dt=diff(thyme)
fog=mydata$fogs[ix]
dfog=diff(fog);
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
boxplotdfdt)
boxplot(dfdt)
summary(dfdt)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
ix=which(mydata$degs==45)
thyme=mydata$time[ix];
thyme=thyme-min(thyme);
dt=diff(thyme)
fog=mydata$fogs[ix]
dfog=diff(fog);
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
ix=which(mydata$degs==60)
thyme=mydata$time[ix];
thyme=thyme-min(thyme);
dt=diff(thyme)
fog=mydata$fogs[ix]
dfog=diff(fog);
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
dt
df
dfog
fog
ix=which(mydata$degs==105)
thyme=mydata$time[ix];
thyme=thyme-min(thyme);
dt=diff(thyme)
fog=mydata$fogs[ix]
dfog=diff(fog);
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
dfog
dt
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
ix=which(mydata$degs==105)
thyme=mydata$time[ix];
thyme=thyme-min(thyme);
dt=diff(thyme)
fog=mydata$fogs[ix]
dfog=diff(fog);
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
dfog=abs(diff(fog));
dfdt=dfog/dt;
plot(thyme[-1],dfdt)
boxplot(dfdt)
spread
degs
dfog
dt
plot(dt,dfog)
plot(dt,dfdt)
fit=lm(dfog~dt)
plot(fit)
fit
plot(dt,fit$fitted.values)
plot(dt,dfog)
lines(dt,fit$fitted.values)
cpm=spread*60
cpm
max(cpm)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
boxplot(spread)
summary(spread)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
pred=predict(fit,data=degs)
pdf('fit.pdf')
plot(degs[-ix],spread[-ix]);
lines(degs,pred,col='blue')
length(pred)
length(degs)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
IX=which(spread==0)
IX
degs[IX]
median(degs[degs[IX]<100])
z=degs[IX]
median(z[z<100])
median(z[z>100])
pdf('cpm-distribution.pdf')
boxplot(spread)
dev.off()
spread[ix]
degs[ix]
outs=degs[ix]
IX=which(mydata$degs==outs[1])
plot(mydata$degs[IX],mydata$time[IX])
dev.off()
dev.off()
IX=which(mydata$degs==outs[1])
plot(mydata$degs[IX],mydata$time[IX])
IX=which(mydata$degs==outs[1])
plot(mydata$time[IX],mydata$fogs[IX])
summary(mydata$fogs[IX}])
summary(mydata$fogs[IX])
IX=which(mydata$degs==(outs[1]-1))
plot(mydata$time[IX],mydata$fogs[IX])
IX=which(mydata$degs==outs[1])
which(mydata$fogs>0)
which(mydata$fogs[IX]>0)
length(IX)
mydata$fogs[IX]
IX=which(mydata$degs==outs[2])
plot(mydata$time[IX],mydata$fogs[IX])
IX=which(mydata$degs==outs[3])
plot(mydata$time[IX],mydata$fogs[IX])
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
sortedspread=sort(spread)
sortedspread
232-54
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
boxplot(spread)
boxplot(spread[-ix])
sortedspread=sort(spread)
sortedspread
IX=which(spread==0)
degs[IX]
z=degs[IX]
median(z[z<100])
median(z[z>100])
233-54
length(z)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
plot(degs,spread)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
plot(degs,spread)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
IX=which(spread==0)
z=degs[IX]
median(z[z<100])
median(z[z>100])
z[z<100]
z[z>100]
pred
pred2=pred^2
pred2
dpred2=diff(pred2)
dpred2
plot(dpred2)
plot(pred2)
plot(pred)
plot(pred2)
min(pred2)
pred2[pred2<0.01]
pred2[pred2<0.1]
plot(diff(pred))
peaks(diff(pred))
max(diff(pred))
which.max(diff(pred))
which.max(-diff(pred))
pred[8]
pred[9]
pred[44]
pred[45]
pred[43]
diff(pred>0)
which(diff(pred>0)<0)
a=which(diff(pred>0)<0)
a
pred[a]
pred[a+1]
plot(pred)
points(a+1,pred[a+1],col='red',pch=20)
points(a,pred[a],col='red',pch=20)
plot(degs,pred)
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
source('~/Dropbox/Alice_Project/pycode/data_fit.R')
mydata=read.csv('bias.csv',header=FALSE)
mydata
colnames(mydata)=c('degs','volts','fogs','time')
head(mydata)
dt=diff(mydata$time)
dfog=diff(mydata$fogs)
dfogdt=dfog/dt
plot(dfogdt)
hist(dfogdt)
boxplot(dfogdt)
summary(dfogdt)
dfogdt=dfogdt[abs(dfogdt)>10*abs(median(dfogdt))]
plot(dfogdt)
dfogdt=dfog/dt
dfogdt=dfogdt[abs(dfogdt)<10*abs(median(dfogdt))]
plot(dfogdt)
plot(dt,dfog)
dfogdt=dfog/dt
dt=dt[abs(dfogdt)>10*abs(median(dfogdt))]
dt=diff(mydata$time)
dt=dt[abs(dfogdt)<10*abs(median(dfogdt))]
dfogdt=dfogdt[abs(dfogdt)<10*abs(median(dfogdt))]
plot(dt,dfogdt)
boxplot(dfogdt)
